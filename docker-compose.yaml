version: '3.8'

# services are what we going to orchestrate
services: 
  mysqldb:
    image: mysql:latest
    restart: always
    # env_file: ./backend/.env
    environment:
      DB_PASSWORD: $DB_PASSWORD
      DB_NAME: $DB_NAME
      DB_USER: $DB_USER
    ports:
      - $DB_LOCAL_PORT:$DB_DOCKER_PORT
    expose:
      - '3306'
    volumes:
      - db:/var/lib/mysql
  
  crypto-connect-api:
    depends_on:
      - mysqldb
    container_name: crypto_connect_server
    # image: crypto_connect_server_image
    restart: unless-stopped
    # env_file: ./backend/.env
    build: ./app
      # context: ./backend
      # dockerfile: ./Dockerfile
    ports:
      - $PORT:$NODE_DOCKER_PORT
    environment:
      - DB_HOST=localhost
      - DB_USER=$DB_USER
      - DB_PASSWORD=$DB_PASSWORD
      - DB_NAME=$DB_NAME
      - DB_PORT=$DB_DOCKER_PORT
    stdin_open: true
    # volumes:
    #   - .:/usr/app/
    #   - /usr/app/node_modules
  
  # crypto-connect-ui:
  #   depends_on:
  #     - crypto-connect-api
  #   container_name: crypto_connect_web
  #   image: crypto_connect_web_image
  #   build:
  #     context: ./
  #     dockerfile: ./Dockerfile
  #   restart: unless-stopped
  #   env_file: ./backend/.env
  #   ports:
  #     - $REACT_LOCAL_PORT:$REACT_DOCKER_PORT
  #   stdin_open: true
  #   tty: true

volumes: 
  db: 
  .: